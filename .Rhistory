"../data/corp_76to20_bystate_MGyearrecoded.xlsx",
"../data/suspensions_72to21_bystate_MGyearrecoded.xlsx",
"../data/treatment dataset_2year.xlsx",
"../fonts/Seaford.ttf")
)
rsconnect::deployApp(
appDir = getwd(),  # Deploy the whole project directory
appPrimaryDoc = "code/shiny_improved.Rmd",
appFiles = c("code/shiny_improved.Rmd",
"data/corp_76to20_bystate_MGyearrecoded.xlsx",
"data/suspensions_72to21_bystate_MGyearrecoded.xlsx",
"data/treatment dataset_2year.xlsx",
"fonts/Seaford.ttf")
)
library(rsconnect)
rsconnect::setAccountInfo(name='bspinneruo',
token='1DBB618632784157DD5834D8697502B7',
secret='Pdo3PZK19ACBB1wOHaMFUAJXtXCnlIDxoDDDErYy')
rsconnect::deployApp(
appDir = getwd(),  # Deploying the "code" folder
appFiles = c(
"../code/shiny_improved.Rmd",
"../data/corp_76to20_bystate_MGyearrecoded.xlsx",
"../data/suspensions_72to21_bystate_MGyearrecoded.xlsx",
"../data/treatment dataset_2year.xlsx",
"../fonts/Seaford.ttf"
),
appName = "educ640_r",
appTitle = "Racial Disparities in School Discipline Dashboard"
)
library(rsconnect)
rsconnect::setAccountInfo(name='bspinneruo',
token='1DBB618632784157DD5834D8697502B7',
secret='Pdo3PZK19ACBB1wOHaMFUAJXtXCnlIDxoDDDErYy')
rsconnect::deployApp(
appDir = getwd(c("code", "data", "fonts")),  # Deploying the "code" folder
appFiles = c(
"code/shiny_improved.Rmd",
"../data/corp_76to20_bystate_MGyearrecoded.xlsx",
"../data/suspensions_72to21_bystate_MGyearrecoded.xlsx",
"../data/treatment dataset_2year.xlsx",
"../fonts/Seaford.ttf"
),
appName = "educ640_r",
appTitle = "Racial Disparities in School Discipline Dashboard"
)
library(rsconnect)
rsconnect::setAccountInfo(name='bspinneruo',
token='1DBB618632784157DD5834D8697502B7',
secret='Pdo3PZK19ACBB1wOHaMFUAJXtXCnlIDxoDDDErYy')
rsconnect::deployApp(
appDir = getwd(),  # Deploying the "code" folder
appFiles = c(
"code/shiny_improved.Rmd",
"data/corp_76to20_bystate_MGyearrecoded.xlsx",
"data/suspensions_72to21_bystate_MGyearrecoded.xlsx",
"data/treatment dataset_2year.xlsx",
"fonts/Seaford.ttf"
),
appName = "educ640_r",
appTitle = "Racial Disparities in School Discipline Dashboard"
)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
rsconnect::deployApp(
appDir = getwd(),  # Ensures deployment from project root
appPrimaryDoc = "code/shiny_improved.Rmd",  # Specifies the primary Rmd file
appFiles = c(
"code/shiny_improved.Rmd",
"data/corp_76to20_bystate_MGyearrecoded.xlsx",
"data/suspensions_72to21_bystate_MGyearrecoded.xlsx",
"data/treatment dataset_2year.xlsx",
"fonts/Seaford.ttf"
),
appName = "educ640_r",
appTitle = "Racial Disparities in School Discipline Dashboard"
)
rsconnect::deployApp(
appDir = getwd(),  # Ensures deployment from project root
appPrimaryDoc = "code/shiny_improved.Rmd",  # Specifies the primary Rmd file
appFiles = c(
"code/shiny_improved.Rmd",
"data/corp_76to20_bystate_MGyearrecoded.xlsx",
"data/suspensions_72to21_bystate_MGyearrecoded.xlsx",
"data/treatment dataset_2year.xlsx",
"fonts/Seaford.ttf"
),
appName = "educ640_r",
appTitle = "Racial Disparities in School Discipline Dashboard"
)
rsconnect::deployApp(
appDir = getwd(),  # Ensures deployment from project root
appPrimaryDoc = "code/shiny_improved.Rmd",  # Specifies the primary Rmd file
appFiles = c(
"code/shiny_improved.Rmd",
"data/corp_76to20_bystate_MGyearrecoded.xlsx",
"data/suspensions_72to21_bystate_MGyearrecoded.xlsx",
"data/treatment dataset_2year.xlsx",
"fonts/Seaford.ttf"
),
appName = "educ640_r final",
appTitle = "Racial Disparities in School Discipline Dashboard"
)
rsconnect::deployApp(
appDir = getwd(),  # Ensures deployment from project root
appPrimaryDoc = "code/shiny_improved.Rmd",  # Specifies the primary Rmd file
appFiles = c(
"code/shiny_improved.Rmd",
"data/corp_76to20_bystate_MGyearrecoded.xlsx",
"data/suspensions_72to21_bystate_MGyearrecoded.xlsx",
"data/treatment dataset_2year.xlsx",
"fonts/Seaford.ttf"
),
appName = "educ640_r_final",
appTitle = "Racial Disparities in School Discipline Dashboard"
)
setwd()
getwd()
shiny::runApp()
rsconnect::deployApp(
appDir = getwd(),  # Ensures deployment from project root
appPrimaryDoc = "code/shiny_improved.Rmd",  # Specifies the primary Rmd file
appFiles = c(
"code/shiny_improved.Rmd",
"data/corp_76to20_bystate_MGyearrecoded.xlsx",
"data/suspensions_72to21_bystate_MGyearrecoded.xlsx",
"data/treatment dataset_2year.xlsx",
"fonts/Seaford.ttf"
),
appName = "educ640_r_final",
appTitle = "Racial Disparities in School Discipline Dashboard"
)
### Static Map
# #===============================
# # Brand Theme Definition
# #===============================
theme_brand <- function(base_size = 12) {
theme_minimal(base_size = base_size) %+replace%
theme(
# Text elements
text = element_text(family = "Seaford"),  # Seaford
plot.title = element_text(
size = rel(1.2),
face = "bold"
),
plot.subtitle = element_text(
size = rel(1)
),
axis.title = element_text(
face = "bold"
),
# Grid elements
panel.grid.major = element_line(color = brand_colors$light_gray),
panel.grid.minor = element_blank(),
# Legend
legend.position = "bottom"
)
}
server <- function(input, output, session) {
output$static_map <- renderPlot({
ggplot() +
geom_sf(data = df_join, aes(fill = as.factor(DD)), color = "white", size = 0.3) +
scale_fill_manual(values = color_palette, labels = c("Not Adopted", "Adopted")) +
theme_brand() +
labs(
title = "Corporal Punishment Ban Adoption by State",
subtitle = "States that adopted bans starting in 2020",
fill = "Ban Status"
) +
theme_minimal()
})
}
plotOutput("static_map")
shiny::runApp()
runApp('code/shiny_improved_kintr')
source('code/shiny_improved_kintr/app.R')
runApp('code/shiny_improved_kintr')
runApp('code/')
runApp('code/')
rmarkdown::run("code/shiny_improved.Rmd")
rmarkdown::run("code/shiny_improved.Rmd")
library(shiny)
library(here)
ui <- fluidPage(
includeHTML(here("code/shiny_improved.html"))  # This is the pre-knit Flexdashboard file
)
runApp('code/shiny_improved_kintr')
shinyApp(ui, server)
rsconnect::deployApp(appDir = getwd(), appFiles = c("app.R", "code/shiny_improved.Rmd"))
rsconnect::deployApp(appDir = getwd(), appFiles = c("shiny_improved_knitr/app.R", "code/shiny_improved.Rmd"))
rsconnect::deployApp(appDir = getwd(), appFiles = c("code/shiny_improved_knitr/app.R", "code/shiny_improved.Rmd"))
here()
runApp('fianl_educ640')
runApp('fianl_educ640')
runApp('fianl_educ640')
library(shiny)
library(ggplot2)
library(dplyr)
library(leaflet)
library(plotly)
library(sf)
library(rio)
library(here)
library(tidyverse)
# Load Data
df1 <- import(here::here("data/corp_76to20_bystate_MGyearrecoded.xlsx"))
df2 <- import(here::here("data/suspensions_72to21_bystate_MGyearrecoded.xlsx"))
df3 <- import(here::here("data/treatment dataset_2year.xlsx"))
# ✅ Register Seaford Font
showtext_auto()
# Convert US states to an sf object
us_states_sf <- st_as_sf(maps::map("state", fill = TRUE, plot = FALSE)) %>%
rename(region = ID) %>%
mutate(region = tolower(region)) %>%
st_transform(crs = 4326)  # Convert CRS to WGS84
# Merge df_corp with full state names
df_corp_join <- left_join(df_corp, state_lookup, by = "STATE_CODE")
# Filter for states adopting bans in 2020+
df_corp <- df3 %>%
filter(YEAR > 2020) %>%
group_by(STATE_CODE)
# Convert US states to an sf object
us_states_sf <- st_as_sf(maps::map("state", fill = TRUE, plot = FALSE)) %>%
rename(region = ID) %>%
mutate(region = tolower(region)) %>%
st_transform(crs = 4326)  # Convert CRS to WGS84
# Merge df_corp with full state names
df_corp_join <- left_join(df_corp, state_lookup, by = "STATE_CODE")
state_lookup <- data.frame(STATE_CODE = state.abb, region = tolower(state.name))
# Merge df_corp with full state names
df_corp_join <- left_join(df_corp, state_lookup, by = "STATE_CODE")
df_corp_join$region <- if_else(is.na(df_corp_join$region), "district of columbia", df_corp_join$region)
# Merge with map data
df_join <- left_join(us_states_sf, df_corp_join, by = "region")
# Define color palette
color_palette <- list("0" = "#e5de54", "1" = "#808c73")
brand_colors <- list(
dark_gray = "#303333",
sage = "#808c73",
light_gray = "#bdbfbf"
)
# #===============================
# # Brand Theme Definition
# #===============================
theme_brand <- function(base_size = 12) {
theme_minimal(base_size = base_size) %+replace%
theme(
# Text elements
text = element_text(family = "Seaford"),  # Seaford
plot.title = element_text(
size = rel(1.2),
face = "bold"
),
plot.subtitle = element_text(
size = rel(1)
),
axis.title = element_text(
face = "bold"
),
# Grid elements
panel.grid.major = element_line(color = brand_colors$light_gray),
panel.grid.minor = element_blank(),
# Legend
legend.position = "bottom"
)
}
# ✅ Custom Styling for UI
custom_css <- "
.navbar-default {
background-color: #e5de54 !important;
border-color: #e5de54;
}
.navbar-default .navbar-brand, .navbar-default .navbar-nav > li > a {
color: #303333 !important;
font-family: 'Seaford', sans-serif;
}
h1, h2, h3, h4, h5, h6, p, label {
font-family: 'Seaford', sans-serif;
color: #303333;
}
"
# UI
ui <- fluidPage(
titlePanel("Racial Disparities in School Discipline: Explorer Dashboard"),
tabsetPanel(
# 📌 Main Page (Static Map)
tabPanel("Dashboard",
leafletOutput("static_map", height = 600)
),
# 📌 Suspension Rates by State
tabPanel("Suspension Rates by State",
leafletOutput("susp_map", height = 600),
plotlyOutput("susp_plot", height = 400)
),
# 📌 Corporal Punishment Rates by State
tabPanel("Corporal Punishment Rates by State",
leafletOutput("corp_map", height = 600),
plotlyOutput("corp_plot", height = 400)
)
)
)
# Server
server <- function(input, output, session) {
# 📌 Static Map
output$static_map <- renderPlot({
ggplot() +
geom_sf(data = df_join, aes(fill = as.factor(DD)), color = "white", size = 0.3) +
scale_fill_manual(values = color_palette, labels = c("Not Adopted", "Adopted")) +
theme_brand() +
labs(
title = "Corporal Punishment Ban Adoption by State",
subtitle = "States that adopted bans starting in 2020",
fill = "Ban Status"
) +
theme_minimal()
})
}
df_corp2 <- left_join(df2, state_lookup, by = "STATE_CODE")
df_corp2$region <- if_else(is.na(df_corp2$region), "district of columbia", df_corp2$region)
# Merge with map data
int_data <- left_join(us_states_sf, df_corp2, by = "region")
int_data <- int_data %>%
mutate(across(c(pct_, OSS_), ~ replace_na(.x, 0))) %>%  # Replace NA with 0 in selected columns
pivot_wider(
names_from = race,   # Convert race categories into column names
values_from = pct_,  # Values to fill in new columns
values_fill = list(pct_ = 0)) # replace na's with 0s
long_data <- int_data %>%
pivot_longer(cols = c(AI, AS, BL, HI, HP, MR, WH, total), names_to = "race", values_to = "pct_") %>%
group_by(YEAR, race, STATE_CODE)
output$map <- renderLeaflet({
leaflet(int_data, options = leafletOptions(zoomControl = FALSE, dragging = FALSE)) %>%
addTiles() %>%
# ✅ Set initial view to focus on the U.S.
setView(lng = -98.5795, lat = 39.8283, zoom = 4) %>%  # Center at U.S. geographic center
# ✅ Restrict users from moving outside the U.S.
fitBounds(lng1 = -125, lat1 = 25, lng2 = -66, lat2 = 50) %>%
addPolygons(
fillColor = ~colorNumeric(
palette = colorRampPalette(c( "#303333", "#e0dfda", "#f0efed"))(100),
domain = int_data$total
)(total),
color = "white",
weight = 1,
fillOpacity = .8,
highlightOptions = highlightOptions(weight = 3, color = "#666", fillOpacity = 0.9),
label = ~paste0(region, ": ", round(total, 2), "% Avg. Overall Suspended"),
layerId = ~STATE_CODE  # Use STATE_CODE instead of region
)
})
# 📌 Interactive Corporal Punishment Map
output$corp_map <- renderLeaflet({
leaflet(df_join) %>%
addTiles() %>%
setView(lng = -98.5795, lat = 39.8283, zoom = 4) %>%
addPolygons(
fillColor = ~colorNumeric(palette = "Oranges", domain = df1$CORP_)(CORP_),
color = "white",
weight = 1,
fillOpacity = 0.8,
label = ~paste(region, ": ", round(CORP_, 2), "% Corporal Punishment"),
layerId = ~STATE_CODE
)
})
observeEvent(input$susp_map_shape_click, {
selected_state_susp(input$susp_map_shape_click$id)
})
observeEvent(input$corp_map_shape_click, {
selected_state_corp(input$corp_map_shape_click$id)
})
runApp('fianl_educ640')
runApp('fianl_educ640')
View(df_join)
# Chunk 1
library(flexdashboard)
library(shiny)
library(ggplot2)
library(dplyr)
library(leaflet)
library(plotly)
library(sf)
library(rio)
library(here)
library(tidyverse)
# install.packages("rsconnect")
library(rsconnect)
library(showtext)
# setwd("/Users/brittanyspinner/Desktop/QRME PhD 24-25/phd_w2025/educ640_capstone/educ640_R")
# # ✅ Define the path to your Seaford font
# seaford_font_path <- file.path(getwd("fonts/Seaford.ttf"))
#
# # ✅ Register the font if the file exists
# if (file.exists(seaford_font_path)) {
#   font_add("Seaford", seaford_font_path)
# } else {
#   warning("⚠️ Font file not found: Seaford.ttf")
# }
# # ✅ Enable text rendering
# showtext_auto()
# Load Data
df1 <- import(here::here("data/corp_76to20_bystate_MGyearrecoded.xlsx"))
df2 <- import(here::here("data/suspensions_72to21_bystate_MGyearrecoded.xlsx"))
df3 <- import(here::here("data/treatment dataset_2year.xlsx"))
# Filter for states adopting bans in 2020+
df_corp <- df3 %>%
filter(YEAR > 2020) %>%
group_by(STATE_CODE)
# Convert US states to an sf object
us_states_sf <- st_as_sf(maps::map("state", fill = TRUE, plot = FALSE))
# Ensure the correct CRS (Convert to EPSG:4326 - WGS84)
us_states_sf <- st_transform(us_states_sf, crs = 4326)  # convert CRS to WGS84
# Fix column names for merging
us_states_sf <- us_states_sf %>%
rename(region = ID) %>%
mutate(region = tolower(region))
# Create state lookup for abbreviations
state_lookup <- data.frame(STATE_CODE = state.abb, region = tolower(state.name))
# Merge df_corp with full state names
df_corp_join <- left_join(df_corp, state_lookup, by = "STATE_CODE")
# Fix DC missing in state mapping
df_corp_join$region <- if_else(is.na(df_corp_join$region), "district of columbia", df_corp_join$region)
# Merge with map data
df_join <- left_join(us_states_sf, df_corp_join, by = "region")
# Define color palette
color_palette <- list("0" = "#e5de54", "1" = "#808c73")
brand_colors <- list(
dark_gray = "#303333",
sage = "#808c73",
light_gray = "#bdbfbf"
)
# Store selected state in a reactive value
selected_state <- reactiveVal(NULL)
#
# df_join <- st_make_valid(df_join) %>%
#   filter(st_is_valid(.)) %>%
#   st_transform(crs = 4326)
# # Create state lookup for abbreviations
# state_lookup <- data.frame(STATE_CODE = state.abb, region = tolower(state.name))
# Chunk 2
### Static Map
# #===============================
# # Brand Theme Definition
# #===============================
theme_brand <- function(base_size = 12) {
theme_minimal(base_size = base_size) %+replace%
theme(
# Text elements
text = element_text(family = "Seaford"),  # Seaford
plot.title = element_text(
size = rel(1.2),
face = "bold"
),
plot.subtitle = element_text(
size = rel(1)
),
axis.title = element_text(
face = "bold"
),
# Grid elements
panel.grid.major = element_line(color = brand_colors$light_gray),
panel.grid.minor = element_blank(),
# Legend
legend.position = "bottom"
)
}
output$static_map <- renderPlot({
ggplot() +
geom_sf(data = df_join, aes(fill = as.factor(DD)), color = "white", size = 0.3) +
scale_fill_manual(values = color_palette, labels = c("Not Adopted", "Adopted")) +
theme_brand() +
labs(
title = "Corporal Punishment Ban Adoption by State",
subtitle = "States that adopted bans starting in 2020",
fill = "Ban Status"
) +
theme_minimal()
})
# Calculate corporal punishment rate as a percentage of enrollment
df_trend <- cp %>%
mutate(Corporal_Rate = pmax(CORP_ / ENR_) * 100) %>%
replace_na(list(Corporal_Rate = 0))  # Replace NaN values with 0
tabPanel("Suspension Rates by State",
leafletOutput("susp_map", height = 600),
plotlyOutput("susp_plot", height = 400)
),
# 📌 Interactive Corporal Punishment Map
cp <- df1 %>%
mutate(
ENR_ = as.numeric(ENR_),
CORP_ = as.numeric(CORP_)
)
)
# Fix DC missing in state mapping
cp$region <- if_else(is.na(cp$region), "district of columbia", cp$region)
# Merge df_corp with full state names
cp <- left_join(cp, state_lookup, by = "STATE_CODE")
# Fix DC missing in state mapping
cp$region <- if_else(is.na(cp$region), "district of columbia", cp$region)
# Merge with map data
cp <- left_join(us_states_sf, cp, by = "region")
# Calculate corporal punishment rate as a percentage of enrollment
df_trend <- cp %>%
mutate(Corporal_Rate = pmax(CORP_ / ENR_) * 100) %>%
replace_na(list(Corporal_Rate = 0))  # Replace NaN values with 0
View(long_data)
View(df_trend)
runApp('fianl_educ640')
wide_trend <- df_trend %>%
pivot_wider(
names_from = race,   # Convert race categories into column names
values_from = Corporal_Rate,  # Values to fill in new columns
values_fill = list(Corporal_Rate = 0)) # replace na's with 0s
